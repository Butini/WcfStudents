//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfStudents.Presentation.WinSite.StudentServiceReferent {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/WcfStudents.Common.Models")]
    [System.SerializableAttribute()]
    public partial class Student : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StudentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StudentID {
            get {
                return this.StudentIDField;
            }
            set {
                if ((this.StudentIDField.Equals(value) != true)) {
                    this.StudentIDField = value;
                    this.RaisePropertyChanged("StudentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StudentServiceReferent.IStudentService")]
    public interface IStudentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/Add", ReplyAction="http://tempuri.org/IStudentService/AddResponse")]
        WcfStudents.Presentation.WinSite.StudentServiceReferent.Student Add(WcfStudents.Presentation.WinSite.StudentServiceReferent.Student student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/Add", ReplyAction="http://tempuri.org/IStudentService/AddResponse")]
        System.Threading.Tasks.Task<WcfStudents.Presentation.WinSite.StudentServiceReferent.Student> AddAsync(WcfStudents.Presentation.WinSite.StudentServiceReferent.Student student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/DeleteById", ReplyAction="http://tempuri.org/IStudentService/DeleteByIdResponse")]
        WcfStudents.Presentation.WinSite.StudentServiceReferent.Student DeleteById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/DeleteById", ReplyAction="http://tempuri.org/IStudentService/DeleteByIdResponse")]
        System.Threading.Tasks.Task<WcfStudents.Presentation.WinSite.StudentServiceReferent.Student> DeleteByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/Update", ReplyAction="http://tempuri.org/IStudentService/UpdateResponse")]
        WcfStudents.Presentation.WinSite.StudentServiceReferent.Student Update(WcfStudents.Presentation.WinSite.StudentServiceReferent.Student student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/Update", ReplyAction="http://tempuri.org/IStudentService/UpdateResponse")]
        System.Threading.Tasks.Task<WcfStudents.Presentation.WinSite.StudentServiceReferent.Student> UpdateAsync(WcfStudents.Presentation.WinSite.StudentServiceReferent.Student student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/GetById", ReplyAction="http://tempuri.org/IStudentService/GetByIdResponse")]
        WcfStudents.Presentation.WinSite.StudentServiceReferent.Student GetById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/GetById", ReplyAction="http://tempuri.org/IStudentService/GetByIdResponse")]
        System.Threading.Tasks.Task<WcfStudents.Presentation.WinSite.StudentServiceReferent.Student> GetByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/GetAll", ReplyAction="http://tempuri.org/IStudentService/GetAllResponse")]
        WcfStudents.Presentation.WinSite.StudentServiceReferent.Student[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/GetAll", ReplyAction="http://tempuri.org/IStudentService/GetAllResponse")]
        System.Threading.Tasks.Task<WcfStudents.Presentation.WinSite.StudentServiceReferent.Student[]> GetAllAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStudentServiceChannel : WcfStudents.Presentation.WinSite.StudentServiceReferent.IStudentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StudentServiceClient : System.ServiceModel.ClientBase<WcfStudents.Presentation.WinSite.StudentServiceReferent.IStudentService>, WcfStudents.Presentation.WinSite.StudentServiceReferent.IStudentService {
        
        public StudentServiceClient() {
        }
        
        public StudentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StudentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WcfStudents.Presentation.WinSite.StudentServiceReferent.Student Add(WcfStudents.Presentation.WinSite.StudentServiceReferent.Student student) {
            return base.Channel.Add(student);
        }
        
        public System.Threading.Tasks.Task<WcfStudents.Presentation.WinSite.StudentServiceReferent.Student> AddAsync(WcfStudents.Presentation.WinSite.StudentServiceReferent.Student student) {
            return base.Channel.AddAsync(student);
        }
        
        public WcfStudents.Presentation.WinSite.StudentServiceReferent.Student DeleteById(int id) {
            return base.Channel.DeleteById(id);
        }
        
        public System.Threading.Tasks.Task<WcfStudents.Presentation.WinSite.StudentServiceReferent.Student> DeleteByIdAsync(int id) {
            return base.Channel.DeleteByIdAsync(id);
        }
        
        public WcfStudents.Presentation.WinSite.StudentServiceReferent.Student Update(WcfStudents.Presentation.WinSite.StudentServiceReferent.Student student) {
            return base.Channel.Update(student);
        }
        
        public System.Threading.Tasks.Task<WcfStudents.Presentation.WinSite.StudentServiceReferent.Student> UpdateAsync(WcfStudents.Presentation.WinSite.StudentServiceReferent.Student student) {
            return base.Channel.UpdateAsync(student);
        }
        
        public WcfStudents.Presentation.WinSite.StudentServiceReferent.Student GetById(int id) {
            return base.Channel.GetById(id);
        }
        
        public System.Threading.Tasks.Task<WcfStudents.Presentation.WinSite.StudentServiceReferent.Student> GetByIdAsync(int id) {
            return base.Channel.GetByIdAsync(id);
        }
        
        public WcfStudents.Presentation.WinSite.StudentServiceReferent.Student[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<WcfStudents.Presentation.WinSite.StudentServiceReferent.Student[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
    }
}
